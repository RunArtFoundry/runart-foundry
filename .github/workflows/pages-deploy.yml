name: Pages Deploy Fallback

on:
  push:
    branches:
      - main

jobs:
  wait_native:
    name: Wait for native Pages deployment
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      native_succeeded: ${{ steps.check.outputs.result }}
    steps:
      - name: Poll Cloudflare Pages check
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const timeoutMs = 8 * 60 * 1000; // 8 minutes
            const intervalMs = 30000; // 30 seconds
            const start = Date.now();

            async function sleep(ms) {
              return new Promise(resolve => setTimeout(resolve, ms));
            }

            async function getRun() {
              const { data } = await github.rest.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.sha,
                per_page: 100,
              });
              return data.check_runs.find(run => run.name === "Cloudflare Pages" && run.app && run.app.slug === "cloudflare-pages");
            }

            while (Date.now() - start < timeoutMs) {
              const run = await getRun();
              if (run) {
                core.info(`Found Cloudflare Pages check (status=${run.status}, conclusion=${run.conclusion ?? 'pending'})`);
                if (run.status === "completed") {
                  if (run.conclusion === "success") {
                    core.info("Native Cloudflare Pages deployment succeeded.");
                    core.setOutput("result", "true");
                    return "true";
                  }
                  core.warning(`Native Cloudflare Pages deployment ended with conclusion: ${run.conclusion}`);
                  core.setOutput("result", "false");
                  return "false";
                }
              } else {
                core.info("Cloudflare Pages check not yet created. Waiting...");
              }
              await sleep(intervalMs);
            }

            core.warning("Timed out waiting for native Cloudflare Pages deployment to succeed.");
            core.setOutput("result", "false");
            return "false";

  pages_fallback:
    name: Cloudflare Pages fallback deploy
    needs: wait_native
    if: always() && needs.wait_native.outputs.native_succeeded != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true
    steps:
      - name: Check fallback secrets
        id: secrets_check
        run: |
          missing=()
          if [ -z "${{ secrets.CF_API_TOKEN }}" ]; then missing+=("CF_API_TOKEN"); fi
          if [ -z "${{ secrets.CF_ACCOUNT_ID }}" ]; then missing+=("CF_ACCOUNT_ID"); fi

          if [ ${#missing[@]} -gt 0 ]; then
            echo "Missing secrets: ${missing[*]}"
            echo "should_skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "All required Cloudflare secrets are present."
            echo "should_skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Skip fallback deploy (missing secrets)
        if: steps.secrets_check.outputs.should_skip == 'true'
        run: echo "Skipping fallback deploy because required Cloudflare secrets are not configured."

      - name: Checkout repository
        if: steps.secrets_check.outputs.should_skip != 'true'
        uses: actions/checkout@v4

      - name: Setup Python
        if: steps.secrets_check.outputs.should_skip != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node.js
        if: steps.secrets_check.outputs.should_skip != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        if: steps.secrets_check.outputs.should_skip != 'true'
        working-directory: apps/briefing
        run: npm ci

      - name: Build site
        if: steps.secrets_check.outputs.should_skip != 'true'
        working-directory: apps/briefing
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: '1'
        run: npm run build

      - name: Deploy to Cloudflare Pages (Production)
        if: steps.secrets_check.outputs.should_skip != 'true'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: runart-foundry
          directory: ./apps/briefing/site
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
