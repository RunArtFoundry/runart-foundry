name: "Forensics: Collect Pages Data"

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create forensics directory
        run: mkdir -p docs/_meta/_deploy_forensics
      
      - name: Collect CF Pages projects
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          curl -sS "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects" \
            -H "Authorization: Bearer $CF_API_TOKEN" | jq '.' > docs/_meta/_deploy_forensics/cf_projects.json
      
      - name: Collect runart-foundry deploys
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          curl -sS "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects/runart-foundry/deployments" \
            -H "Authorization: Bearer $CF_API_TOKEN" | jq '.result[:10]' > docs/_meta/_deploy_forensics/cf_deploys.json
      
      - name: Collect project settings
        env:
          CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          curl -sS "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects/runart-foundry" \
            -H "Authorization: Bearer $CF_API_TOKEN" | jq '.' > docs/_meta/_deploy_forensics/cf_project_settings.json
      
      - name: Download production content snippets
        env:
          CF_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID_PREVIEW }}
          CF_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET_PREVIEW }}
        run: |
          curl -sS -H "CF-Access-Client-Id: $CF_CLIENT_ID" -H "CF-Access-Client-Secret: $CF_CLIENT_SECRET" \
            https://runart-foundry.pages.dev/index.html | head -n 50 > docs/_meta/_deploy_forensics/home_snippet.html
          curl -sS -H "CF-Access-Client-Id: $CF_CLIENT_ID" -H "CF-Access-Client-Secret: $CF_CLIENT_SECRET" \
            https://runart-foundry.pages.dev/status/ | head -n 50 > docs/_meta/_deploy_forensics/status_snippet.html || echo "status_404" > docs/_meta/_deploy_forensics/flag_status.txt
          curl -sS -H "CF-Access-Client-Id: $CF_CLIENT_ID" -H "CF-Access-Client-Secret: $CF_CLIENT_SECRET" \
            https://runart-foundry.pages.dev/news/ | head -n 50 > docs/_meta/_deploy_forensics/news_snippet.html || echo "news_404" > docs/_meta/_deploy_forensics/flag_news.txt
          curl -sS -H "CF-Access-Client-Id: $CF_CLIENT_ID" -H "CF-Access-Client-Secret: $CF_CLIENT_SECRET" \
            https://runart-foundry.pages.dev/status/history/ | head -n 50 > docs/_meta/_deploy_forensics/history_snippet.html || echo "history_404" > docs/_meta/_deploy_forensics/flag_history.txt
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Build local site for fingerprint comparison
        run: |
          cd apps/briefing
          pip install -q mkdocs-material mkdocs-glightbox
          mkdocs build -f mkdocs.yml -d site
      
      - name: Compare production vs local fingerprints
        env:
          CF_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID_PREVIEW }}
          CF_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET_PREVIEW }}
        run: |
          ./tools/compare_prod_fingerprints.sh
      
      - name: Commit forensics data
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/_meta/_deploy_forensics/
          git commit -m "forensics: collect Pages API data + prod content snippets" || true
          git push || true
