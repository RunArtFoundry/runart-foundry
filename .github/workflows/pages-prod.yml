name: Deploy Production (Cloudflare)

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ chore/bootstrap-git ]
  workflow_dispatch:
    inputs:
      collect_evidence:
        description: "Guardar evidencias T* en _reports"
        required: false
        default: "true"

jobs:
  build-and-deploy:
    name: Build & Deploy Production
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      statuses: write
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CF_PROJECT_NAME: runart-foundry
      TARGET_BRANCH: main
      RUNART_ENV: production
    steps:
      - name: Validate secrets
        run: |
          missing=()
          for name in CLOUDFLARE_API_TOKEN CLOUDFLARE_ACCOUNT_ID; do
            if [ -z "${!name}" ]; then missing+=("$name"); fi
          done
          if [ ${#missing[@]} -gt 0 ]; then
            echo "ERROR: faltan secrets: ${missing[*]}" >&2
            exit 1
          fi
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        working-directory: apps/briefing
        run: npm ci
      - name: Build site
        working-directory: apps/briefing
        run: npm run build
      - name: Run unit smoke tests
        working-directory: apps/briefing
        run: npm run test:unit:smoke

      - name: Precheck prod DNS/HTTP (with 1.1.1.1 fallback & retries)
        env:
          PROD_URL: https://runart-foundry.pages.dev/
        run: |
          set -e
          echo "Prod: $PROD_URL"
          HOST=$(echo "$PROD_URL" | sed 's#https\?://##' | cut -d/ -f1)
          echo "Host: $HOST"

          resolve() {
            getent hosts "$HOST" >/dev/null && return 0
            dig +short "$HOST" @1.1.1.1 | grep -qE '^[0-9.]+$' && return 0
            return 1
          }

          tries=0; max=6
          until resolve; do
            tries=$((tries+1))
            echo "DNS intento $tries/$max…"
            sleep $((tries*2))
            [ $tries -ge $max ] && { echo "DNS no resuelve: $HOST"; exit 1; }
          done
          echo "DNS OK"

          tries=0; max=3
          until curl -sI --max-time 10 "$PROD_URL" >/dev/null; do
            tries=$((tries+1))
            echo "HTTP intento $tries/$max…"
            sleep $((tries*2))
            [ $tries -ge $max ] && { echo "HTTP no responde: $PROD_URL"; exit 1; }
          done
          echo "HTTP OK"

      - name: Run HTTP smokes against Production (gate)
        env:
          PROD_URL: https://runart-foundry.pages.dev/
          SMOKES_RETRIES: 3
          SMOKES_RETRY_DELAY_MS: 1500
          SMOKES_ALLOW_302: "1"
        run: |
          node apps/briefing/tests/scripts/run-smokes.mjs --base-url "$PROD_URL" --allow-302 --no-follow
        # Si los smokes fallan, se detiene el pipeline (exit code distinto de cero)

      - name: Deploy to Production
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CF_PROJECT_NAME }}
          directory: ./apps/briefing/site
          branch: ${{ env.TARGET_BRANCH }}
          wranglerVersion: '3'
        - name: Auth smoke (Service Token, post-deploy, non-blocking)
          if: ${{ secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' }}
          env:
            PROD_URL: https://runart-foundry.pages.dev/
            ACCESS_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID }}
            ACCESS_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET }}
          run: |
            set +e
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="apps/briefing/_reports/smokes_prod_${TS}"
            mkdir -p "$REPORT"
            BASE_URL="$PROD_URL" make -C apps/briefing test-smoke-wrapper
            STATUS=$?
            if [ $STATUS -eq 0 ]; then
              echo "- Autenticado Prod: PASS (200 ok)" >> "${REPORT}/SUMMARY.md"
            else
              echo "- Autenticado Prod: FAIL (ver stdout)" >> "${REPORT}/SUMMARY.md"
            fi
            exit 0
        - name: Auth smoke (Prod SKIPPED — missing secrets)
          if: ${{ ! (secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' ) }}
          run: |
            echo "Auth smoke Prod SKIPPED: falta ACCESS_CLIENT_ID/ACCESS_CLIENT_SECRET"
        - name: Update 082 (Prod, auth)
          run: |
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="_reports/smokes_prod_${TS}/"
            FILE="apps/briefing/docs/internal/briefing_system/ci/082_reestructuracion_local.md"
            { echo "## Smokes Producción (auth) — ${TS}";
              echo "- Autenticado (Service Token): PASS|SKIPPED|FAIL";
              echo "- Evidencias: ${REPORT}"; } >> "$FILE"

        - name: Auth smoke (Service Token, post-deploy, non-blocking)
          if: ${{ secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' }}
          env:
            PROD_URL: https://runart-foundry.pages.dev/
            ACCESS_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID }}
            ACCESS_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET }}
          run: |
            set +e
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="apps/briefing/_reports/smokes_prod_${TS}"
            mkdir -p "$REPORT"
            BASE_URL="$PROD_URL" make -C apps/briefing test-smoke-wrapper
            STATUS=$?
            if [ $STATUS -eq 0 ]; then
              echo "- Autenticado Prod: PASS (200 ok)" >> "${REPORT}/SUMMARY.md"
            else
              echo "- Autenticado Prod: FAIL (ver stdout)" >> "${REPORT}/SUMMARY.md"
            fi
            exit 0

        - name: Auth smoke (Prod SKIPPED — missing secrets)
          if: ${{ ! (secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' ) }}
          run: |
            echo "Auth smoke Prod SKIPPED: falta ACCESS_CLIENT_ID/ACCESS_CLIENT_SECRET"

        - name: Update 082 (Prod, auth)
          run: |
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="_reports/smokes_prod_${TS}/"
            FILE="apps/briefing/docs/internal/briefing_system/ci/082_reestructuracion_local.md"
            { echo "## Smokes Producción (auth) — ${TS}";
              echo "- Autenticado (Service Token): PASS|SKIPPED|FAIL";
              echo "- Evidencias: ${REPORT}"; } >> "$FILE"
        - name: Auth smoke (Service Token, post-deploy, non-blocking)
          if: ${{ secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' }}
          env:
            PROD_URL: https://runart-foundry.pages.dev/
            ACCESS_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID }}
            ACCESS_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET }}
          run: |
            set +e
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="apps/briefing/_reports/smokes_prod_${TS}"
            mkdir -p "$REPORT"
            BASE_URL="$PROD_URL" make -C apps/briefing test-smoke-wrapper
            STATUS=$?
            if [ $STATUS -eq 0 ]; then
              echo "- Autenticado Prod: PASS (200 ok)" >> "${REPORT}/SUMMARY.md"
            else
              echo "- Autenticado Prod: FAIL (ver stdout)" >> "${REPORT}/SUMMARY.md"
            fi
            exit 0
        - name: Auth smoke (Prod SKIPPED — missing secrets)
          if: ${{ ! (secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' ) }}
          run: |
            echo "Auth smoke Prod SKIPPED: falta ACCESS_CLIENT_ID/ACCESS_CLIENT_SECRET"
        - name: Update 082 (Prod, auth)
          run: |
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="_reports/smokes_prod_${TS}/"
            FILE="apps/briefing/docs/internal/briefing_system/ci/082_reestructuracion_local.md"
            { echo "## Smokes Producción (auth) — ${TS}";
              echo "- Autenticado (Service Token): PASS|SKIPPED|FAIL";
              echo "- Evidencias: ${REPORT}"; } >> "$FILE"
        - name: Auth smoke (Service Token, post-deploy, non-blocking)
          if: ${{ secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' }}
          env:
            PROD_URL: https://runart-foundry.pages.dev/
            ACCESS_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID }}
            ACCESS_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET }}
          run: |
            set +e
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="apps/briefing/_reports/smokes_prod_${TS}"
            mkdir -p "$REPORT"
            BASE_URL="$PROD_URL" make -C apps/briefing test-smoke-wrapper
            STATUS=$?
            if [ $STATUS -eq 0 ]; then
              echo "- Autenticado Prod: PASS (200 ok)" >> "${REPORT}/SUMMARY.md"
            else
              echo "- Autenticado Prod: FAIL (ver stdout)" >> "${REPORT}/SUMMARY.md"
            fi
            exit 0
        - name: Auth smoke (Prod SKIPPED — missing secrets)
          if: ${{ ! (secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' ) }}
          run: |
            echo "Auth smoke Prod SKIPPED: falta ACCESS_CLIENT_ID/ACCESS_CLIENT_SECRET"
        - name: Update 082 (Prod, auth)
          run: |
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            REPORT="_reports/smokes_prod_${TS}/"
            FILE="apps/briefing/docs/internal/briefing_system/ci/082_reestructuracion_local.md"
            { echo "## Smokes Producción (auth) — ${TS}";
              echo "- Autenticado (Service Token): PASS|SKIPPED|FAIL";
              echo "- Evidencias: ${REPORT}"; } >> "$FILE"
      - name: Auth smoke (Service Token, post-deploy, non-blocking)
  if: ${{ secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' }}
        env:
          PROD_URL: https://runart-foundry.pages.dev/
          ACCESS_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID }}
          ACCESS_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET }}
        run: |
          set +e
          TS=$(date -u +%Y%m%dT%H%M%SZ)
          REPORT="apps/briefing/_reports/smokes_prod_${TS}"
          mkdir -p "$REPORT"
          BASE_URL="$PROD_URL" make -C apps/briefing test-smoke-wrapper
          STATUS=$?
          if [ $STATUS -eq 0 ]; then
            echo "- Autenticado Prod: PASS (200 ok)" >> "${REPORT}/SUMMARY.md"
          else
            echo "- Autenticado Prod: FAIL (ver stdout)" >> "${REPORT}/SUMMARY.md"
          fi
          exit 0
      - name: Auth smoke (Prod SKIPPED — missing secrets)
  if: ${{ ! (secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' ) }}
        run: |
          echo "Auth smoke Prod SKIPPED: falta ACCESS_CLIENT_ID/ACCESS_CLIENT_SECRET"
      - name: Update 082 (Prod, auth)
        run: |
          TS=$(date -u +%Y%m%dT%H%M%SZ)
          REPORT="_reports/smokes_prod_${TS}/"
          FILE="apps/briefing/docs/internal/briefing_system/ci/082_reestructuracion_local.md"
          { echo "## Smokes Producción (auth) — ${TS}";
            echo "- Autenticado (Service Token): PASS|SKIPPED|FAIL";
            echo "- Evidencias: ${REPORT}"; } >> "$FILE"
      - name: Auth smoke (Service Token, post-deploy, non-blocking)
        if: ${{ secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' }}
        env:
          PROD_URL: https://runart-foundry.pages.dev/
          ACCESS_CLIENT_ID: ${{ secrets.ACCESS_CLIENT_ID }}
          ACCESS_CLIENT_SECRET: ${{ secrets.ACCESS_CLIENT_SECRET }}
        run: |
          set +e
          TS=$(date -u +%Y%m%dT%H%M%SZ)
          REPORT="apps/briefing/_reports/smokes_prod_${TS}"
          mkdir -p "$REPORT"
          BASE_URL="$PROD_URL" make -C apps/briefing test-smoke-wrapper
          STATUS=$?
          if [ $STATUS -eq 0 ]; then
            echo "- Autenticado Prod: PASS (200 ok)" >> "${REPORT}/SUMMARY.md"
          else
            echo "- Autenticado Prod: FAIL (ver stdout)" >> "${REPORT}/SUMMARY.md"
          fi
          exit 0
      - name: Auth smoke (Prod SKIPPED — missing secrets)
        if: ${{ ! (secrets.ACCESS_CLIENT_ID != '' && secrets.ACCESS_CLIENT_SECRET != '' ) }}
        run: |
          echo "Auth smoke Prod SKIPPED: falta ACCESS_CLIENT_ID/ACCESS_CLIENT_SECRET"
      - name: Update 082 (Prod, auth)
        run: |
          TS=$(date -u +%Y%m%dT%H%M%SZ)
          REPORT="_reports/smokes_prod_${TS}/"
          FILE="apps/briefing/docs/internal/briefing_system/ci/082_reestructuracion_local.md"
          { echo "## Smokes Producción (auth) — ${TS}";
            echo "- Autenticado (Service Token): PASS|SKIPPED|FAIL";
            echo "- Evidencias: ${REPORT}"; } >> "$FILE"
