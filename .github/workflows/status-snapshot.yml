name: Status Snapshot Weekly

on:
  schedule:
    # Lunes a las 07:00 UTC (después de la auditoría semanal que corre a las 09:00)
    - cron: '0 7 * * 1'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  snapshot:
    name: Create Weekly Status Snapshot
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Generate fresh status.json
        run: |
          echo "🔄 Generando status.json fresco..."
          python3 scripts/gen_status.py
          
          if [ ! -f docs/status.json ]; then
            echo "❌ ERROR: status.json no generado"
            exit 1
          fi
          
          echo "✅ status.json generado exitosamente"
      
      - name: Create snapshot directory
        run: |
          mkdir -p docs/_meta/status_samples
          echo "✅ Directorio de snapshots creado/verificado"
      
      - name: Save snapshot
        id: snapshot
        run: |
          snapshot_date=$(date -u +%F)
          snapshot_file="docs/_meta/status_samples/status_${snapshot_date}.json"
          
          # Copiar status.json al directorio de snapshots
          cp docs/status.json "${snapshot_file}"
          
          # Extraer métricas para el log
          docs_live=$(jq -r '.docs_live_count' docs/status.json)
          archive_count=$(jq -r '.archive_count' docs/status.json)
          
          echo "snapshot_file=${snapshot_file}" >> $GITHUB_OUTPUT
          echo "snapshot_date=${snapshot_date}" >> $GITHUB_OUTPUT
          echo "docs_live=${docs_live}" >> $GITHUB_OUTPUT
          echo "archive_count=${archive_count}" >> $GITHUB_OUTPUT
          
          echo "✅ Snapshot guardado: ${snapshot_file}"
          echo "   📊 Live: ${docs_live} | Archive: ${archive_count}"
      
      - name: Cleanup old snapshots (keep last 12 weeks)
        run: |
          # Mantener solo los últimos 12 snapshots (3 meses de historial)
          cd docs/_meta/status_samples
          ls -t status_*.json | tail -n +13 | xargs -r rm -f
          
          remaining=$(ls -1 status_*.json 2>/dev/null | wc -l)
          echo "✅ Limpieza completada — Snapshots restantes: ${remaining}"
      
      - name: Commit snapshot
        id: commit
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add docs/_meta/status_samples/status_*.json
          
          # Verificar si hay cambios
          if git diff --staged --quiet; then
            echo "ℹ️  No hay cambios para commitear (snapshot idéntico al anterior)"
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Commit con [skip ci]
          git commit -m "chore(status): snapshot semanal ${{ steps.snapshot.outputs.snapshot_date }} [skip ci]

          - Live: ${{ steps.snapshot.outputs.docs_live }} docs
          - Archive: ${{ steps.snapshot.outputs.archive_count }} docs
          - Snapshot: ${{ steps.snapshot.outputs.snapshot_file }}
          
          Generated by: .github/workflows/status-snapshot.yml"
          
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "✅ Snapshot commiteado"
      
      - name: Push snapshot
        if: steps.commit.outputs.has_changes == 'true'
        run: |
          echo "🔄 Pushing snapshot a main..."
          git push origin main
          echo "✅ Push completado"
      
      - name: Summary
        if: always()
        run: |
          echo "## 📸 Status Snapshot Weekly — Completado" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Fecha:** ${{ steps.snapshot.outputs.snapshot_date }}" >> $GITHUB_STEP_SUMMARY
          echo "**Archivo:** \`${{ steps.snapshot.outputs.snapshot_file }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Métricas capturadas" >> $GITHUB_STEP_SUMMARY
          echo "- **Docs live:** ${{ steps.snapshot.outputs.docs_live }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Archive:** ${{ steps.snapshot.outputs.archive_count }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Cambios commiteados:** ${{ steps.commit.outputs.has_changes }}" >> $GITHUB_STEP_SUMMARY
