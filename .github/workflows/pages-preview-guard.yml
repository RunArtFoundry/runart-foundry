name: Guard - Require Cloudflare Pages Preview

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'deploy/**'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
      - 'deploy/**'

permissions:
  checks: read
  pull-requests: read
  contents: read

jobs:
  require-pages-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Verify Cloudflare Pages Preview check exists
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr = context.payload.pull_request.number;

            const { data: prData } = await github.rest.pulls.get({ owner, repo, pull_number: pr });
            const sha = prData.head.sha;
            const delayMs = 10000;
            const maxAttempts = 18; // ~3 minutos

            const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

            const matchesPages = (names) => names.some((n) =>
              n.includes('cloudflare pages') ||
              n.includes('pages preview') ||
              n.includes('deploy preview')
            );

            for (let attempt = 1; attempt <= maxAttempts; attempt++) {
              const checks = await github.rest.checks.listForRef({ owner, repo, ref: sha });
              const checkNames = checks.data.check_runs.map((c) => c.name);

              const statuses = await github.rest.repos.listCommitStatusesForRef({ owner, repo, ref: sha });
              const statusNames = statuses.data.map((s) => s.context);

              const combined = [...new Set([...checkNames, ...statusNames])];
              core.info(`Intento ${attempt}/${maxAttempts} — checks detectados: ${combined.join(', ') || 'ninguno'}`);

              if (matchesPages(combined.map((name) => name.toLowerCase()))) {
                core.info('Cloudflare Pages Preview detectado ✅');
                return;
              }

              if (attempt < maxAttempts) {
                core.info(`No se detectó Cloudflare Pages aún. Esperando ${delayMs / 1000}s antes de reintentar...`);
                await sleep(delayMs);
              }
            }

            core.setFailed('No se detectó el check de Cloudflare Pages Preview en este PR tras múltiples reintentos. Verifica la integración del proyecto con GitHub y que Preview Deployments esté habilitado.');
